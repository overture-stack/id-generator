
NODE_ENV=development
PORT=

#DB connection details
DB_HOST=
DB_PORT=
DB_USERNAME=
DB_PASSWORD=
DB_NAME=
DB_SYNCHRONIZE=true
DB_SCHEMA:

# list of valid entity types
ENTITY_LIST = ["donor", "specimen", "sample"]

# request path for searching id. Param names should match column names in <ENTITY_TYPE>_SCHEMA. The order should match the order of columns in <ENTITY_TYPE>
REQUEST_ROUTE = /:column1/:column2/:column3

#List of DB sequences if any. Not mandatory, can be omitted.
DB_SEQUENCES =

# Repeat the below set for each entity type.
# structure of the request/search-criteria/saved-entity. Should match column names. Sequences in defaultValue can be given as "nextval('argo.specimen_seq')" or "0" or "'A'".
<ENTITY_TYPE>_SCHEMA = {"tablename": "tablename", "columns": [{"name": "entityId","type": "varchar", "defaultValue": "default-value or sequence call", "unique": true}, {"name": "column1", "type": "db-datatype", "defaultValue": "default-value or sequence call"},{"name": "column2", "type": "db-datatype", "defaultValue": "default-value or sequence call"}]}
<ENTITY_TYPE_SEARCH> = {"column1":"", "column2":"", "column3": ""}

# Can be used for custom generation of the id. Provide a code construct to create an id generating function at runtime. Eg: {return Date.now();}. If not needed this entry can be omitted.
<ENTITY_TYPE>_ID_EXPRESSION = {}

