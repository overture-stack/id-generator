
NODE_ENV=development
PORT=

#DB connection details
DB_HOST=
DB_PORT=
DB_USERNAME=
DB_PASSWORD=
DB_NAME=
DB_SYNCHRONIZE=true
DB_SCHEMA:

# list of valid entity types
ENTITY_LIST = ["donor", "specimen", "sample"]

# request path for searching id. Should match column names
REQUEST_ROUTE = /:column1/:column2/:column3

# request-structure/search-criteria/save-entity structure. Should match column names. Sequences in defaultValue can be given as "nextval('argo.specimen_seq')"
entity1_schema = {"tablename": "tablename", "columns": [{"name": "column1", "type": "db-datatype", "defaultValue": "default-value or sequence-name"},{"name": "column2", "type": "db-datatype", "defaultValue": "default-value or sequence-name"}, {"name": "column3", "type": "db-datatype", "defaultValue": "default-value or sequence-name"}, {"name": "column4", "type": "db-datatype", "defaultValue": "default-value or sequence-name"}], "sequence":"CREATE SEQUENCE query here or empty"}
entity1 = {"column1":"", "column2":"", "column3": ""}
entity1_id_expression = {} # Use a function construct to create an id generating function dynamically. Eg: {return Date.now();}

